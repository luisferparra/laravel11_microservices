version: '3.8'

networks:
  internal-network:
    driver: bridge
    external: false
  external-network:
    driver: bridge

volumes:
  db_server:
    driver: local

services:
  #nginx:
  #  image: nginx:latest
  #  container_name: nginx
  #  restart: unless-stopped
  #  ports:
  #    - 8080:80
  #  volumes:
  #    - ./.docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
  #  networks:
  #    - internal-network
  #    - external-network
  #  depends_on:
  #    - auth_service

  traefik:
    image: traefik:v2.0.2
    ports:
      - "8080:80"
      - "443:443"
      - "8081:8080"
    #labels:
    #  - "traefik.http.routers.traefik.rule=Host(`laravel.vm`)"
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --logLevel=DEBUG
      - --log.level=DEBUG
    container_name: traefik
    
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./.docker/traefik/traefik.toml:/etc/traefik/traefik.toml
      - ./traefik/log:/var/log
    networks:
      - internal-network
      - external-network

  db:
    image: mysql:8.0
    container_name: ms-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: control_db
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_USER: ms_db_user
      MYSQL_PASSWORD: 123456
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    ports:
      - 33006:3306
    volumes:
      - db_server:/var/lib/mysql
      - ./.docker/mysql:/docker-entrypoint-initdb.d
      - ./.docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    networks:
      - internal-network

  auth_service:
    build:
      context: ./auth_service
      dockerfile: ../.docker/laravel_services/auth_service/Dockerfile
      args:
        user: www-data
        uid: 82
    container_name: auth_service
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./auth_service:/var/www
    environment:
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=auth_db
      - DB_USERNAME=root
      - DB_PASSWORD=123456
      - DB_USERNAME_ROOT=root
      - VIRTUAL_HOST=localhost:8888
      - APP_NAME=auth_microservices
      - APP_ENV=local
      - APP_KEY=base64:uD/7qiWyVJ3jlULxYaIgiVrmB0jhwzzlBtXPpfBdK74=
      - APP_DEBUG=true
      - APP_TIMEZONE=UTC
      - APP_LOCALE=en
      - APP_FALLBACK_LOCALE=en
      - APP_FAKER_LOCALE=en_US
    #command:
    #  - php artisan migrate
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth_service.rule=Host(`api.laravel.vm`) && PathPrefix(`/api/auth`)" # Define el host para este servicio
      - "traefik.http.services.auth_service.loadbalancer.server.port=80" # Puerto interno de Laravel en el contenedor
    command: php artisan serve --host=0.0.0.0 --port=80 
    depends_on:
      - db
    networks:
      - internal-network
      #- external-network
    
  customers_service:
    build:
      context: ./customers_service
      dockerfile: ../.docker/laravel_services/customers_service/Dockerfile
      args:
        user: www-data
        uid: 82
    container_name: customers_service
    restart: unless-stopped
    
    working_dir: /var/www/
    volumes:
      - ./customers_service:/var/www
    environment:
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=customers_db
      - DB_USERNAME=root
      - DB_PASSWORD=123456
      - DB_USERNAME_ROOT=root
      - INTERNAL_HOST=customers.laravel.vm
      - APP_NAME=customers_service
      - APP_URL=customers.laravel.vm
      - APP_ENV=local
      - APP_KEY=base64:8KfGZa7LsgkU6+dugNFtTByX2X4m/vQfIT0H+PQaHHw=
      - APP_DEBUG=true
      - APP_TIMEZONE=UTC
      - APP_LOCALE=en
      - APP_FALLBACK_LOCALE=en
      - APP_FAKER_LOCALE=en_US
    
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.customers_service.rule=Host(`api.laravel.vm`)  && PathPrefix(`/api/customers`)" # Define el host para este servicio
      - "traefik.http.services.customers_service.loadbalancer.server.port=80" # Puerto interno de Laravel en el contenedor
    command: php artisan serve --host=0.0.0.0 --port=80 
    depends_on:
      - db
    networks:
      - internal-network
    




